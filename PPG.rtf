pip install wfdb

import numpy as np
import wfdb

record = wfdb.rdrecord('3141595_0001', pn_dir='mimic3wdb/1.0/31/3141595')

# Display the signal shape
print(record.p_signal.shape)

# Plot the ECG
wfdb.plot_wfdb(record=record, title='MIMIC Record 3141595_0001')

record.sig_name
print(record.p_signal.shape)

# Demo 5 - Read a WFDB record and annotation.
#signal, fields = wfdb.rdsamp('3141595_0001', sampfrom=0, sampto=1000, channels=[0], pn_dir='mimic3wdb/1.0/31/3141595')
signal, fields = wfdb.rdsamp('3141595_0001', sampfrom=0, sampto=5000, channels=[0], pn_dir='mimic3wdb/1.0/31/3141595')

signal = signal.flatten()


import matplotlib.pyplot as plt

plt.figure(figsize=(12, 5))
plt.plot(signal, label='Original Signal')
plt.tight_layout()
plt.show()

T = 1 / fs  # Sampling interval
n = len(signal)
fft_vals = np.fft.fft(signal)
fft_vals = np.abs(fft_vals[:n // 2])  # Magnitude only, half-spectrum
freqs = np.fft.fftfreq(n, T)[:n // 2]  # Frequency bins



# Plot positive frequencies only
plt.figure(figsize=(12, 4))
plt.plot(freqs, fft_vals)
plt.title("Frequency Response (FFT of PPG Signal)")
plt.xlabel("Frequency (Hz)")
plt.ylabel("Magnitude")
plt.xlim(0,5)
#plt.ylim(0,1300)
plt.grid(True)
plt.show()

print(signal.shape)
display(signal)
display(fields)
fs=fields['fs']
time = np.arange(len(signal)) / fs
print(fs)

from scipy.signal import butter
low=0.5/(0.5*125)
high=5/(0.5*125)
b, a = butter(4, [low, high], btype='band', analog=False)
print(a)

from scipy.signal import iirnotch, filtfilt
filtered = filtfilt(b, a, signal)  # Use filtfilt for zero-phase

b, a = butter(4, Wn=0.0064, btype='high', analog=False)
filtered = filtfilt(b, a, filtered)  # Use filtfilt for zero-phase

fft_filt = np.fft.fft(filtered)
fft_filt = np.abs(fft_filt[:n // 2])  # Magnitude only, half-spectrum
freqs = np.fft.fftfreq(n, T)[:n // 2]  # Frequency bins



# Plot positive frequencies only
plt.figure(figsize=(12, 4))
plt.plot(freqs, fft_filt, color='green')
#plt.plot(freqs, fft_vals,color='red')
plt.title("Frequency Response (FFT of PPG Signal)")
plt.xlabel("Frequency (Hz)")
plt.ylabel("Magnitude")
#plt.xlim(0, 65)  # Zoom into 0 to 100 Hz


plt.grid(True)
plt.show()

import matplotlib.pyplot as plt

plt.figure(figsize=(12, 5))
plt.plot(filtered, label='filtered Signal')
plt.plot(signal, label='Original Signal')

plt.tight_layout()
plt.show()

record = wfdb.rdrecord('108', pn_dir='mitdb', sampto=1000)
sig = record.p_signal[:, 0]  # First channel

display(sig)
display(signal)

plt.figure(figsize=(12, 4))
plt.plot(time, sig, color='blue')
plt.figure(figsize=(12, 4))
plt.plot(time, signal, color='red')
plt.title('Channel 0 - Record 100 (MIT-BIH)')
plt.xlabel('Time (s)')
plt.ylabel('Amplitude (mV)')
plt.grid(True)
plt.tight_layout()
plt.show()
